[build-system]
build-backend = "setuptools.build_meta"
requires = [ "setuptools>=61.2" ]

[project]
name = "speechrecognition"
description = "Library for performing speech recognition, with support for several engines and APIs, online and offline."
readme.content-type = "text/x-rst"
readme.file = "README.rst"
keywords = [
  "api",
  "bing",
  "google",
  "houndify",
  "ibm",
  "recognition",
  "snowboy",
  "speech",
  "sphinx",
  "voice",
  "wit",
]
license = { text = "BSD" }
authors = [ { name = "Anthony Zhang (Uberi)", email = "azhang9@gmail.com" } ]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Natural Language :: English",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: Other OS",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Multimedia :: Sound/Audio :: Speech",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = [ "version" ]
dependencies = [
  "standard-aifc; python_version>='3.13'",
  "typing-extensions",
]

optional-dependencies.assemblyai = [ "requests" ]
optional-dependencies.audio = [ "pyaudio>=0.2.11" ]
optional-dependencies.dev = [
  "flake8",
  "pytest",
  "pytest-randomly",
  "respx",
  "rstcheck",
]
optional-dependencies.groq = [
  "groq",
  "httpx<0.28",
]
optional-dependencies.openai = [
  "httpx<0.28",
  "openai",
]
optional-dependencies.pocketsphinx = [ "pocketsphinx<5" ]
optional-dependencies.whisper-local = [
  "openai-whisper",
  "soundfile",
]
urls.Homepage = "https://github.com/Uberi/speech_recognition#readme"

[tool.setuptools]
dynamic.version = { attr = "speech_recognition.__init__.__version__" }
include-package-data = true
packages.find.exclude = [ "tests.*" ]
packages.find.namespaces = false
